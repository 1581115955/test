<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mapper.HouseMapper">
  <resultMap id="BaseResultMap" type="com.bean.House">
    <constructor>
      <idArg column="id" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="user_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="type_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="title" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="description" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="price" javaType="java.lang.Long" jdbcType="DECIMAL" />
      <arg column="pubdate" javaType="java.util.Date" jdbcType="DATE" />
      <arg column="floorage" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="contact" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="street_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="ispass" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="isdel" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="path" javaType="java.lang.String" jdbcType="VARCHAR" />
    </constructor>
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, user_id, type_id, title, description, price, pubdate, floorage, contact, street_id, 
    ispass, isdel, path
  </sql>
  <select id="selectByExample" parameterType="com.bean.HouseExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from house
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from house
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from house
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.bean.House">
    insert into house (id, user_id, type_id, 
      title, description, price, 
      pubdate, floorage, contact, 
      street_id, ispass, isdel, 
      path)
    values (#{id,jdbcType=VARCHAR}, #{userId,jdbcType=INTEGER}, #{typeId,jdbcType=INTEGER}, 
      #{title,jdbcType=VARCHAR}, #{description,jdbcType=VARCHAR}, #{price,jdbcType=DECIMAL}, 
      #{pubdate,jdbcType=DATE}, #{floorage,jdbcType=INTEGER}, #{contact,jdbcType=VARCHAR}, 
      #{streetId,jdbcType=INTEGER}, #{ispass,jdbcType=INTEGER}, #{isdel,jdbcType=INTEGER}, 
      #{path,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.bean.House">
    insert into house
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="typeId != null">
        type_id,
      </if>
      <if test="title != null">
        title,
      </if>
      <if test="description != null">
        description,
      </if>
      <if test="price != null">
        price,
      </if>
      <if test="pubdate != null">
        pubdate,
      </if>
      <if test="floorage != null">
        floorage,
      </if>
      <if test="contact != null">
        contact,
      </if>
      <if test="streetId != null">
        street_id,
      </if>
      <if test="ispass != null">
        ispass,
      </if>
      <if test="isdel != null">
        isdel,
      </if>
      <if test="path != null">
        path,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="typeId != null">
        #{typeId,jdbcType=INTEGER},
      </if>
      <if test="title != null">
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="price != null">
        #{price,jdbcType=DECIMAL},
      </if>
      <if test="pubdate != null">
        #{pubdate,jdbcType=DATE},
      </if>
      <if test="floorage != null">
        #{floorage,jdbcType=INTEGER},
      </if>
      <if test="contact != null">
        #{contact,jdbcType=VARCHAR},
      </if>
      <if test="streetId != null">
        #{streetId,jdbcType=INTEGER},
      </if>
      <if test="ispass != null">
        #{ispass,jdbcType=INTEGER},
      </if>
      <if test="isdel != null">
        #{isdel,jdbcType=INTEGER},
      </if>
      <if test="path != null">
        #{path,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.bean.House">
    update house
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="typeId != null">
        type_id = #{typeId,jdbcType=INTEGER},
      </if>
      <if test="title != null">
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="price != null">
        price = #{price,jdbcType=DECIMAL},
      </if>
      <if test="pubdate != null">
        pubdate = #{pubdate,jdbcType=DATE},
      </if>
      <if test="floorage != null">
        floorage = #{floorage,jdbcType=INTEGER},
      </if>
      <if test="contact != null">
        contact = #{contact,jdbcType=VARCHAR},
      </if>
      <if test="streetId != null">
        street_id = #{streetId,jdbcType=INTEGER},
      </if>
      <if test="ispass != null">
        ispass = #{ispass,jdbcType=INTEGER},
      </if>
      <if test="isdel != null">
        isdel = #{isdel,jdbcType=INTEGER},
      </if>
      <if test="path != null">
        path = #{path,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.bean.House">
    update house
    set user_id = #{userId,jdbcType=INTEGER},
      type_id = #{typeId,jdbcType=INTEGER},
      title = #{title,jdbcType=VARCHAR},
      description = #{description,jdbcType=VARCHAR},
      price = #{price,jdbcType=DECIMAL},
      pubdate = #{pubdate,jdbcType=DATE},
      floorage = #{floorage,jdbcType=INTEGER},
      contact = #{contact,jdbcType=VARCHAR},
      street_id = #{streetId,jdbcType=INTEGER},
      ispass = #{ispass,jdbcType=INTEGER},
      isdel = #{isdel,jdbcType=INTEGER},
      path = #{path,jdbcType=VARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <select id="selectHouseOtherByUserId" resultType="HouseOther" parameterType="int">
    SELECT h.id AS id,title,price,floorage,contact,path,d.name AS dName,s.name AS sName,t.name AS tName
      FROM house AS h
      INNER JOIN street AS s ON h.street_id=s.id
      INNER JOIN district AS d ON s.distrlct_id= d.id
      INNER JOIN type AS t ON h.type_id=t.id
      WHERE user_id= #{0}
  </select>
</mapper>